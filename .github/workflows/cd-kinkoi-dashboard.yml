name: cd-kinkoi-dashboard
on:
    workflow_run:
        workflows: ci-kinkoi-dashboard
        types:
            - completed
        branches:
            - main

jobs:
    build_and_deploy-failure:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}

        steps:
            - run: echo 'The triggering workflow failed'

    build_and_deploy-success:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}

        steps:
            - name: Checkout code
              uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
              with:
                  fetch-depth: 0

            - name: Setup Nodejs
              uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
              with:
                  node-version: 20.12.2

            - name: Setup pnpm
              uses: pnpm/action-setup@v3
              with:
                  version: 9.0.6

            - name: Restore cached npm dependencies
              id: cache-dependencies-restore
              uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
              with:
                  path: |
                      node_modules
                      ~/.cache/Cypress # needed for the Cypress binary
                  key: npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}

            - name: Install monorepo dependencies
              run: pnpm install --frozen-lockfile

            - name: Cache npm dependencies
              id: cache-dependencies-save
              uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
              with:
                  path: |
                      node_modules
                      ~/.cache/Cypress # needed for the Cypress binary
                  key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

            # --distribute-on="5 linux-medium-js"
            - name: Start Nx Cloud
              run: pnpm exec nx-cloud start-ci-run --stop-agents-after="build" --use-dte-by-default=false

            - name: Set Nx SHA
              uses: nrwl/nx-set-shas@76907e7e5d3cd17ddb5e2b123389f054bffcdd03 # v4

            - name: Build Astro
              run: pnpm exec nx run @kinkoi/dashboard:build

            - name: Deploy to Netlify
              run: netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_API_TOKEN }} --filter api --dir=./apps/dashboard/dist --prod
